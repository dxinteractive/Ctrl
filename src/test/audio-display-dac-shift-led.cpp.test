#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Audio.h>

// GUItool: begin automatically generated code
AudioSynthWaveformSine   sine1;          //xy=95.19999694824219,439.20001220703125
AudioInputI2S            i2s1;           //xy=101.19999694824219,358.1999969482422
AudioEffectMultiply      multiply1;      //xy=366.1999969482422,431.1999969482422
AudioOutputI2S           i2s2;           //xy=612.2000122070312,326.20001220703125
AudioConnection          patchCord1(sine1, 0, multiply1, 1);
AudioConnection          patchCord2(i2s1, 0, multiply1, 0);
AudioConnection          patchCord3(multiply1, 0, i2s2, 0);
AudioControlSGTL5000     sgtl5000_1;     //xy=877.1999969482422,50.19999694824219
// GUItool: end automatically generated code

AudioControlSGTL5000 audioAdaptor;

#define PIN_OLED_CS     0
#define PIN_OLED_RESET  1
#define PIN_OLED_DC     2
#define PIN_CV_CS       3
#define PIN_SR_CS       8
#define PIN_LED_1       20
#define PIN_LED_2       21

Adafruit_SSD1306 display(PIN_OLED_DC, PIN_OLED_RESET, PIN_OLED_CS);

void setCV(long chn, long val)
{
  int h = chn << 4 | val >> 6;
  int l = val << 2;
  digitalWrite(PIN_CV_CS, LOW);
  SPI.beginTransaction(SPISettings(4000000, MSBFIRST, SPI_MODE0));
  SPI.transfer(h);
  SPI.transfer(l);
  SPI.endTransaction();
  digitalWrite(PIN_CV_CS, HIGH);    
}

void setSR(int value)
{
  digitalWrite(PIN_SR_CS,LOW);
  SPI.beginTransaction(SPISettings(4000000, MSBFIRST, SPI_MODE0));
  SPI.transfer(value);
  SPI.endTransaction();
  digitalWrite(PIN_SR_CS,HIGH);   
}

void setup()   {
  SPI.setMOSI(7);
  SPI.setSCK(14);

  pinMode(PIN_CV_CS, OUTPUT);
  pinMode(PIN_SR_CS, OUTPUT);
  pinMode(PIN_LED_1, OUTPUT);
  pinMode(PIN_LED_2, OUTPUT);
  digitalWrite(PIN_CV_CS, HIGH);
  digitalWrite(PIN_SR_CS, HIGH);
  digitalWrite(PIN_LED_1, LOW);
  digitalWrite(PIN_LED_2, LOW);

  AudioMemory(12);

  sine1.frequency(1.0);
  sine1.amplitude(1.0);

  // Enable the audio shield, select input, and enable output
  audioAdaptor.enable();
  audioAdaptor.inputSelect(AUDIO_INPUT_LINEIN);
  audioAdaptor.micGain(0);
  audioAdaptor.lineInLevel(12);
  audioAdaptor.lineOutLevel(31);
  audioAdaptor.dacVolume(0.9);
  audioAdaptor.muteHeadphone();
  audioAdaptor.adcHighPassFilterDisable();

  Serial.begin(9600);
  
  display.begin(SSD1306_SWITCHCAPVCC);
  
  display.display();
}

int cv = 0;
int cvDir = 1;
int count = 0;

void loop() {
  count++;

  display.clearDisplay();
  display.setTextSize(3);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  display.println(count);
  display.display();

  cv += (16 * cvDir);
  if(cv > 1023)
  {
    cvDir = -1;
    cv = 1023;
  } else if(cv < 0) {
    cvDir = 1;
    cv = 0;
  }

  for(int j = 0; j < 8; j++)
    setCV(j, cv);

  setSR(count >> 5);

  analogWrite(PIN_LED_1, (count << 2) & 255);
  analogWrite(PIN_LED_2, 255 - ((count << 2) & 255));

  delay(10);
}